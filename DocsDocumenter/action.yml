name: 'Build Documenter.jl site'
author: 'TuringLang'
description: 'Build and deploy Documenter.jl site, with a TuringLang navbar'

inputs:
  julia-version:
    description: 'Julia version to use'
    required: false
    default: '1'
  # Keep this input with underscore to avoid potential issues
  pkg_path:
    description: 'Path to the package root. If empty, defaults to the current working directory.'
    required: false
    default: ''
  additional_pkg_paths:
    description: 'Additional package paths to be dev-ed alongside the main package (one path per line). For multi-package repos.'
    required: false
    default: ''
  doc-path:
    description: 'Path to the Documenter.jl source folder'
    required: false
    default: 'docs'
  doc-make-path:
    description: 'Path to the Documenter.jl build script'
    required: false
    default: 'docs/make.jl'
  doc-build-path:
    description: 'Path to the built HTML documentation'
    required: false
    default: 'docs/build'
  dirname:
    description: 'Subdirectory in gh-pages where the documentation should be deployed'
    required: false
    default: ''
  exclude-paths:
    # GitHub Actions doesn't allow array inputs, so the most robust way to
    # handle this is to use a JSON string. DocsNav then parses this using jq.
    description: 'JSON array of filepath patterns to exclude from navbar insertion.'
    required: false
    default: '[]'
  deploy:
    description: 'Whether to deploy the docs to the gh-pages branch'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Julia
      uses: julia-actions/setup-julia@v2
      with:
        version: ${{ inputs.julia-version }}

    - name: Cache Julia packages
      uses: julia-actions/cache@v2

    - name: Install docs dependencies
      shell: julia --color=yes --project=${{ inputs.doc-path }} {0}
      env:
        INPUT_PKG_PATH: ${{ inputs.pkg_path }}
        INPUT_ADDITIONAL_PKG_PATHS: ${{ inputs.additional_pkg_paths }}
      run: |
        using Pkg

        # Main package development
        pkg_path = ENV["INPUT_PKG_PATH"]
        if pkg_path == ""
          Pkg.develop(PackageSpec(path=pwd()))
        else
          Pkg.develop(PackageSpec(path=pkg_path))
        end

        # Additional packages development (for multi-package repos)
        additional_pkg_paths = ENV["INPUT_ADDITIONAL_PKG_PATHS"]
        if additional_pkg_paths != ""
          for path in split(additional_pkg_paths, "\n")
            path = strip(path)
            println("Developing additional package from: ", path)
            Pkg.develop(PackageSpec(path=path))
          end
        end

        Pkg.instantiate()

    - name: Build docs
      shell: bash
      run: julia --project=${{ inputs.doc-path }} ${{ inputs.doc-make-path }}

      # We want to use the same version of DocsNav. In principle we would like
      # to write `uses: TuringLang/actions/DocsNav@${{ github.action_ref }}`,
      # but the `uses` block doesn't allow for expressions. As a workaround,
      # this step symlinks the actions directory to a fixed path so that we can
      # use it later.
      # See https://github.com/orgs/community/discussions/41927
    - name: Symlink actions folder to a fixed path
      env:
        GH_ACTION_REPO: ${{ github.action_repository }}
        GH_ACTION_REF: ${{ github.action_ref }}
      shell: bash
      run: ln -s /home/runner/work/_actions/$GH_ACTION_REPO/$GH_ACTION_REF/  /home/runner/work/_actions/current

    - name: Insert navbar
      # Using the path symlinked in the previous step
      uses: ./../../_actions/current/DocsNav
      with:
        doc-path: ${{ inputs.doc-build-path }}
        navbar-url: ${{ github.action_path }}/../DocsNav/scripts/TuringNavbar.html
        exclude-paths: ${{ inputs.exclude-paths }}

    - name: Deploy docs to gh-pages branch
      if: ${{ inputs.deploy == 'true' }}
      working-directory: ${{ inputs.doc-path }}
      shell: julia --color=yes --project=. {0}
      # Must pass `root` when `deploydocs()` is run from outside make.jl file
      # Also, `root` must be an absolute path (hence the call to `pwd()`)
      run: |
        using Documenter
        deploydocs(; root=pwd(), repo="github.com/${{ github.repository }}.git", dirname="${{ inputs.dirname }}", push_preview=true)
      env:
        GITHUB_TOKEN: ${{ github.token }}
        JULIA_DEBUG: Documenter
        
    - name: Set docs subdirectory path
      if: ${{ github.event_name == 'pull_request' && inputs.deploy == 'true' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name }}
      shell: bash
      run: echo "DOCS_SUBDIR=${{ inputs.dirname != '' && format('/{0}', inputs.dirname) || '' }}" >> $GITHUB_ENV

    - name: Check for Existing Docs Preview Comment
      if: ${{ github.event_name == 'pull_request' && inputs.deploy == 'true' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name }}
      uses: peter-evans/find-comment@v3
      id: existing_docs_preview_comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: github-actions[bot]
        body-includes: "docs-preview-url-${{ github.event.repository.name }}${{ env.DOCS_SUBDIR }}"

    - name: Create Documentation Preview Comment (if needed)
      if: ${{ steps.existing_docs_preview_comment.outputs.comment-id == '' && github.event_name == 'pull_request' && inputs.deploy == 'true' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          <!-- docs-preview-url-${{ github.event.repository.name }}${{ env.DOCS_SUBDIR }} -->
          ${{ github.event.repository.name }}${{ env.DOCS_SUBDIR }} documentation for PR #${{ github.event.pull_request.number }} is available at:
          https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}${{ env.DOCS_SUBDIR }}/previews/PR${{ github.event.pull_request.number }}/
          
